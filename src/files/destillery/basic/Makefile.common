
##----------------------------------------------------------------------
##			      Internals
##----------------------------------------------------------------------

DATADIR := var/www/data/${PROJECT_NAME}
LOGDIR := var/log/${PROJECT_NAME}
CMDPIPE := var/run/${PROJECT_NAME}-cmd
STATICDIR := var/www/${PROJECT_NAME}
LIBDIR := var/lib/${PROJECT_NAME}
ETCDIR := etc/${PROJECT_NAME}

## Required binaries

ELIOMC      := eliomc
ELIOMOPT    := eliomopt
JS_OF_ELIOM := js_of_eliom
ELIOMDEP    := eliomdep

## Where to put intermediate object files.
## - ELIOM_{SERVER,CLIENT}_DIR must be distinct
## - ELIOM_CLIENT_DIR must not be the local dir.
## - ELIOM_SERVER_DIR could be ".", but you need to
##   remove it from the "clean" rules...

export ELIOM_SERVER_DIR := _server
export ELIOM_CLIENT_DIR := _client
export ELIOM_TYPE_DIR   := _server

## General

all: byte opt

byte:: ${PROJECT_NAME}.cma ${PROJECT_NAME}.js
opt:: ${PROJECT_NAME}.cmxs ${PROJECT_NAME}.js

PHONY: install run

run.local: byte ${PROJECT_NAME}-local.conf
	mkdir -p $(LOCAL_PREFIX)${DATADIR}
	mkdir -p $(LOCAL_PREFIX)${LIBDIR}
	mkdir -p $(LOCAL_PREFIX)${STATICDIR}
	mkdir -p $(LOCAL_PREFIX)${LOGDIR}
	mkdir -p $(LOCAL_PREFIX)${shell dirname ${CMDPIPE}}
	ln -sf ../${PROJECT_NAME}.js static
	ocsigenserver -c ${PROJECT_NAME}-local.conf

install: byte opt ${PROJECT_NAME}.conf
	install -o $(WWWUSER) -d ${INSTALL_PREFIX}${DATADIR}
	install -o $(WWWUSER) -d ${INSTALL_PREFIX}${LIBDIR}
	install -o $(WWWUSER) -d ${INSTALL_PREFIX}${STATICDIR}
	install -o $(WWWUSER) -d ${INSTALL_PREFIX}${LOGDIR}
	install -o $(WWWUSER) -d ${INSTALL_PREFIX}${ETCDIR}
	install -o $(WWWUSER) -d ${INSTALL_PREFIX}${shell dirname ${CMDPIPE}}
	install -o $(WWWUSER) -m 644 ${PROJECT_NAME}.js ${INSTALL_PREFIX}${STATICDIR}
	[ ! -e static/${PROJECT_NAME}.js ] || unlink static/${PROJECT_NAME}.js
	cp -r static/* ${INSTALL_PREFIX}${STATICDIR}
	chown -R $(WWWUSER) ${INSTALL_PREFIX}${STATICDIR}
	install -o $(WWWUSER) -m 644 ${PROJECT_NAME}.cma ${PROJECT_NAME}.cmxs ${INSTALL_PREFIX}${LIBDIR}
	install -o $(WWWUSER) -m 644 ${PROJECT_NAME}.conf ${INSTALL_PREFIX}${ETCDIR}

run: ${PROJECT_NAME}.cma ${PROJECT_NAME}.js ${PROJECT_NAME}.conf
	sudo -u $(WWWUSER) ocsigenserver -c ${INSTALL_PREFIX}${ETCDIR}/${PROJECT_NAME}.conf

ifeq ($(GENERATE_DEBUG),yes)
  DEBUG:=-g
else
  DEBUG:=
endif

ifeq ($(shell ocamlc -version|cut -c1),4)
## Use `eliomdep -sort' only in OCaml>4
eliomdep=$(shell $(ELIOMDEP) $(1) -sort $(2) $(filter %.eliom %.ml,$(3))))
else
eliomdep=$(3)
endif
objs=$(patsubst %.ml,$(1)/%.$(2),$(patsubst %.eliom,$(1)/%.$(2),$(filter %.eliom %.ml,$(3))))
depsort=$(call objs,$(1),$(2),$(call eliomdep,$(3),$(4),$(5)))

##----------------------------------------------------------------------
## ocsigenserver config files

FINDLIB_PACKAGES=$(patsubst %,\<extension\ findlib-package=\"%\"\ /\>,$(SERVER_PACKAGES))
EDIT_WARNING=DO NO EDIT! This file is generated by ${PROJECT_NAME}.conf.in, edit this one, or the Makefile.
SED_ARGS += -e "/^ *%%/d"
SED_ARGS += -e "s|%%PROJECT_NAME%%|${PROJECT_NAME}|g"
SED_ARGS += -e "s|%%PORT%%|${PORT}|g"
SED_ARGS += -e "s|%%DATABASE_NAME%%|${DATABASE_NAME}|g"
SED_ARGS += -e "s|%%DATABASE_USER%%|${DATABASE_USER}|g"
SED_ARGS += -e "s|%%CMDPIPE%%|%%PREFIX%%${CMDPIPE}|g"
SED_ARGS += -e "s|%%LOGDIR%%|%%PREFIX%%${LOGDIR}|g"
SED_ARGS += -e "s|%%WARNING%%|$(EDIT_WARNING)|g"
SED_ARGS += -e "s|%%PACKAGES%%|$(FINDLIB_PACKAGES)|g"
LOCAL_SED_ARGS += -e "s|%%LIBDIR%%||"
LOCAL_SED_ARGS += -e "s|%%STATICDIR%%|static|"
GLOBAL_SED_ARGS += -e "s|%%LIBDIR%%|%%PREFIX%%${LIBDIR}/|"
GLOBAL_SED_ARGS += -e "s|%%STATICDIR%%|%%PREFIX%%${STATICDIR}|"

${PROJECT_NAME}-local.conf: ${PROJECT_NAME}.conf.in Makefile
	sed $(SED_ARGS) $(LOCAL_SED_ARGS) $< | sed -e "s|%%PREFIX%%|$(LOCAL_PREFIX)|" > $@

${PROJECT_NAME}.conf: ${PROJECT_NAME}.conf.in Makefile
	sed $(SED_ARGS) $(GLOBAL_SED_ARGS) $< | sed -e "s|%%PREFIX%%|$(INSTALL_PREFIX)|" > $@

##----------------------------------------------------------------------
## Server side compilation

SERVER_INC  := ${addprefix -package ,${SERVER_PACKAGES}}

${ELIOM_TYPE_DIR}/%.type_mli: %.eliom
	${ELIOMC} -infer ${SERVER_INC} $<

${PROJECT_NAME}.cma: $(call objs,_server,cmo,$(SERVER_FILES))
	${ELIOMC} -a -o $@ $(DEBUG) \
          $(call depsort,$(ELIOM_SERVER_DIR),cmo,-server,$(SERVER_INC),$(SERVER_FILES))
${PROJECT_NAME}.cmxa: $(call objs,_server,cmx,$(SERVER_FILES))
	${ELIOMOPT} -a -o $@ $(DEBUG) \
          $(call depsort,$(ELIOM_SERVER_DIR),cmx,-server,$(SERVER_INC),$(SERVER_FILES))

${ELIOM_SERVER_DIR}/%.cmi: %.mli
	${ELIOMC} -c ${SERVER_INC} $(DEBUG) $<

${ELIOM_SERVER_DIR}/%.cmi: %.eliomi
	${ELIOMC} -c ${SERVER_INC} $(DEBUG) $<

${ELIOM_SERVER_DIR}/%.cmo: %.ml
	${ELIOMC} -c ${SERVER_INC} $(DEBUG) $<
${ELIOM_SERVER_DIR}/%.cmo: %.eliom
	${ELIOMC} -c ${SERVER_INC} $(DEBUG) $<

${ELIOM_SERVER_DIR}/%.cmx: %.ml
	${ELIOMOPT} -c ${SERVER_INC} $(DEBUG) $<
${ELIOM_SERVER_DIR}/%.cmx: %.eliom
	${ELIOMOPT} -c ${SERVER_INC} $(DEBUG) $<

%.cmxs: %.cmxa
	$(ELIOMOPT) -shared -linkall -o $@ $<

##----------------------------------------------------------------------
## Client side compilation

CLIENT_LIBS := ${addprefix -package ,${CLIENT_PACKAGES}}
CLIENT_INC  := ${addprefix -package ,${CLIENT_PACKAGES}}

CLIENT_OBJS := $(filter %.eliom %.ml, $(CLIENT_FILES))
CLIENT_OBJS := $(patsubst %.eliom,${ELIOM_CLIENT_DIR}/%.cmo, ${CLIENT_OBJS})
CLIENT_OBJS := $(patsubst %.ml,${ELIOM_CLIENT_DIR}/%.cmo, ${CLIENT_OBJS})

ifeq ($(GENERATE_DEBUG),yes)
  DEBUG_JS:=-jsopt -pretty -jsopt -noinline -jsopt -debuginfo
endif

${PROJECT_NAME}.js: $(call objs,$(ELIOM_CLIENT_DIR),cmo,$(CLIENT_FILES))
	${JS_OF_ELIOM} -o $@ $(DEBUG) $(DEBUG_JS) \
          $(call depsort,$(ELIOM_CLIENT_DIR),cmo,-client,$(CLIENT_INC),$(CLIENT_FILES))

${ELIOM_CLIENT_DIR}/%.cmi: %.mli
	${JS_OF_ELIOM} -c ${CLIENT_INC} $(DEBUG) $<

${ELIOM_CLIENT_DIR}/%.cmo: %.eliom
	${JS_OF_ELIOM} -c ${CLIENT_INC} $(DEBUG) $<
${ELIOM_CLIENT_DIR}/%.cmo: %.ml
	${JS_OF_ELIOM} -c ${CLIENT_INC} $(DEBUG) $<

${ELIOM_CLIENT_DIR}/%.cmi: %.eliomi
	${JS_OF_ELIOM} -c ${SERVER_INC} $(DEBUG) $<

##----------------------------------------------------------------------
## Dependencies

depend:
	$(ELIOMDEP) -server ${SERVER_INC} ${SERVER_FILES} > .depend
	$(ELIOMDEP) -client ${CLIENT_INC} ${CLIENT_FILES} >> .depend

-include .depend

##----------------------------------------------------------------------
## Clean up

clean:
	-rm -f *.cm[ioax] *.cmxa *.cmxs *.o *.a *.annot
	-rm -f *.type_mli
	-rm -f ${PROJECT_NAME}.js
	-rm -rf ${ELIOM_CLIENT_DIR} ${ELIOM_SERVER_DIR}

distclean: clean
	-rm -f ${PROJECT_NAME}-local.conf ${PROJECT_NAME}.conf
