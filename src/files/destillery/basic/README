
This project is (initially) generated by eliom-destillery as the basic
project "%%%PROJECT_NAME%%%".

It contains the following files:

 - %%%PROJECT_NAME%%%.eliom
   This is your initial source file.
%%%ifdef OCAML4%%%
   All Eliom files (*.eliom, *.eliomi) in this directory are
   automatically considered.  To add a .ml/.mli file to your project,
   add it to the variable SERVER_FILES or CLIENT_FILES.
%%%endif%%%
%%%ifdef OCAML3%%%
   To add more source files (.ml,.mli,.eliom,.eliomi) to your project,
   add it to the variables SERVER_FILES and/or CLIENT_FILES.
%%%endif%%%

 - static/
   The content of this folder is statically served. It contains
   initially a basic CSS file for your project.

 - Makefile.options
   Configure your project here!

 - %%%PROJECT_NAME%%%.conf.in
   This file is a template for the configuration file for
   ocsigenserver. You will rarely have to edit itself - it takes its
   variables from the Makefile.options. This way, the installation
   rules and the configuration files are synchronized with respect to
   the different folders.

 - Makefile
   This contains all rules necessary to build, test, and run your
   Eliom application. You better don't touch it ;) See below for the
   relevant targets.

 - README
   Not completely describable here.


Here's some help on how to work with this basic destillery project:

 - Compile it
     $ make all (or byte or opt)

 - Test your application by running ocsigenserver locally
     $ make test.byte (or test.opt)

 - The directory static/ will be statically served. Put your CSS or
   additional JavaScript files here!

 - Install it
     $ sudo make install (or install.byte or install.opt)

 - Run the server on the installation
     $ sudo make run.byte (or run.opt)
   If WWWUSER in the Makefile.options is you, you don't need the
   `sudo'.  If Ocsigen isn't installed globally, however, you need to
   re-export some environment variables to make this work:
     $ sudo PATH=$PATH OCAMLPATH=$OCAMLPATH LD_LIBRARY_PATH=$LD_LIBRARY_PATH make run.byte/run.opt

 - If you need a findlib package in your project, add it to the
   variables SERVER_PACKAGES and/or CLIENT_PACKAGES.
